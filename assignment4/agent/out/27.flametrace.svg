<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>org.apache.hadoop.fs.FilterFileSystem.close(FilterFileSystem.java:506) (756,128 samples, 0.05%)</title><rect x="10.7" y="277" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.65" y="287.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.close(ProtobufRpcEngine.java:301) (203,226,880 samples, 13.21%)</title><rect x="11.4" y="117" width="155.8" height="15.0" fill="rgb(253,169,31)" rx="2" ry="2" />
<text  x="14.41" y="127.5" >org.apache.hadoop.ip..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (104,686,224 samples, 6.80%)</title><rect x="1109.7" y="293" width="80.3" height="15.0" fill="rgb(234,56,0)" rx="2" ry="2" />
<text  x="1112.73" y="303.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (102,348,358 samples, 6.65%)</title><rect x="715.1" y="229" width="78.4" height="15.0" fill="rgb(213,225,10)" rx="2" ry="2" />
<text  x="718.05" y="239.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (102,072,072 samples, 6.63%)</title><rect x="401.7" y="165" width="78.2" height="15.0" fill="rgb(245,180,14)" rx="2" ry="2" />
<text  x="404.69" y="175.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,145,653 samples, 6.64%)</title><rect x="479.9" y="165" width="78.4" height="15.0" fill="rgb(232,58,46)" rx="2" ry="2" />
<text  x="482.95" y="175.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem.close(FileSystem.java:2422) (155,963 samples, 0.01%)</title><rect x="11.3" y="261" width="0.1" height="15.0" fill="rgb(212,182,46)" rx="2" ry="2" />
<text  x="14.29" y="271.5" ></text>
</g>
<g >
<title>java.util.HashMap.hash(HashMap.java:339) (195,785 samples, 0.01%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(234,178,39)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,837,080 samples, 6.68%)</title><rect x="950.7" y="261" width="78.8" height="15.0" fill="rgb(248,96,36)" rx="2" ry="2" />
<text  x="953.65" y="271.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (101,930,208 samples, 6.62%)</title><rect x="245.3" y="101" width="78.2" height="15.0" fill="rgb(245,215,26)" rx="2" ry="2" />
<text  x="248.32" y="111.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.closeConnectionToNamenode(DFSClient.java:586) (102,409,530 samples, 6.65%)</title><rect x="793.5" y="245" width="78.6" height="15.0" fill="rgb(218,176,24)" rx="2" ry="2" />
<text  x="796.53" y="255.5" >org.apach..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (101,667,022 samples, 6.61%)</title><rect x="89.3" y="69" width="77.9" height="15.0" fill="rgb(243,85,7)" rx="2" ry="2" />
<text  x="92.28" y="79.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.Client.stop(Client.java:1345) (101,124,208 samples, 6.57%)</title><rect x="11.7" y="85" width="77.6" height="15.0" fill="rgb(222,21,51)" rx="2" ry="2" />
<text  x="14.74" y="95.5" >org.apac..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,003,900 samples, 6.63%)</title><rect x="323.5" y="117" width="78.2" height="15.0" fill="rgb(231,214,19)" rx="2" ry="2" />
<text  x="326.47" y="127.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem.close(FileSystem.java:2422) (209,134 samples, 0.01%)</title><rect x="10.4" y="261" width="0.2" height="15.0" fill="rgb(234,193,10)" rx="2" ry="2" />
<text  x="13.40" y="271.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache$Key.hashCode(FileSystem.java:3431) (195,785 samples, 0.01%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(211,2,42)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3379) (104,686,224 samples, 6.80%)</title><rect x="1109.7" y="309" width="80.3" height="15.0" fill="rgb(224,59,28)" rx="2" ry="2" />
<text  x="1112.73" y="319.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (137,783 samples, 0.01%)</title><rect x="10.5" y="229" width="0.1" height="15.0" fill="rgb(236,202,47)" rx="2" ry="2" />
<text  x="13.45" y="239.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1279) (155,963 samples, 0.01%)</title><rect x="11.3" y="277" width="0.1" height="15.0" fill="rgb(254,120,37)" rx="2" ry="2" />
<text  x="14.29" y="287.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.ClientCache.stopClient(ClientCache.java:113) (101,551,138 samples, 6.60%)</title><rect x="11.4" y="101" width="77.9" height="15.0" fill="rgb(232,168,4)" rx="2" ry="2" />
<text  x="14.41" y="111.5" >org.apac..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,269,886 samples, 6.65%)</title><rect x="636.6" y="181" width="78.5" height="15.0" fill="rgb(234,223,51)" rx="2" ry="2" />
<text  x="639.64" y="191.5" >java.lang..</text>
</g>
<g >
<title>all (1,538,961,619 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(241,34,32)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (104,686,224 samples, 6.80%)</title><rect x="1109.7" y="277" width="80.3" height="15.0" fill="rgb(240,126,32)" rx="2" ry="2" />
<text  x="1112.73" y="287.5" >java.lang..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (101,930,208 samples, 6.62%)</title><rect x="245.3" y="117" width="78.2" height="15.0" fill="rgb(234,154,42)" rx="2" ry="2" />
<text  x="248.32" y="127.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,511,132 samples, 6.66%)</title><rect x="872.1" y="229" width="78.6" height="15.0" fill="rgb(239,101,25)" rx="2" ry="2" />
<text  x="875.05" y="239.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.closeConnectionToNamenode(DFSClient.java:585) (1,020,045,758 samples, 66.28%)</title><rect x="11.4" y="245" width="782.1" height="15.0" fill="rgb(229,57,45)" rx="2" ry="2" />
<text  x="14.41" y="255.5" >org.apache.hadoop.hdfs.DFSClient.closeConnectionToNamenode(DFSClient.java:585)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,348,358 samples, 6.65%)</title><rect x="715.1" y="197" width="78.4" height="15.0" fill="rgb(229,143,24)" rx="2" ry="2" />
<text  x="718.05" y="207.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.close(ClientNamenodeProtocolTranslatorPB.java:246) (406,997,664 samples, 26.45%)</title><rect x="11.4" y="149" width="312.1" height="15.0" fill="rgb(242,229,35)" rx="2" ry="2" />
<text  x="14.41" y="159.5" >org.apache.hadoop.hdfs.protocolPB.ClientNa..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.close(ProtobufRpcEngine.java:303) (101,840,576 samples, 6.62%)</title><rect x="167.2" y="117" width="78.1" height="15.0" fill="rgb(214,87,21)" rx="2" ry="2" />
<text  x="170.23" y="127.5" >org.apach..</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) (1,538,961,619 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(243,77,54)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</text>
</g>
<g >
<title>org.apache.hadoop.ipc.Client$ClientExecutorServiceFactory.unrefAndCleanup(Client.java:208) (299,947 samples, 0.02%)</title><rect x="11.5" y="69" width="0.2" height="15.0" fill="rgb(217,43,32)" rx="2" ry="2" />
<text  x="14.51" y="79.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.Client.stop(Client.java:1344) (299,947 samples, 0.02%)</title><rect x="11.5" y="85" width="0.2" height="15.0" fill="rgb(224,162,44)" rx="2" ry="2" />
<text  x="14.51" y="95.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:673) (917,697,400 samples, 59.63%)</title><rect x="11.4" y="229" width="703.7" height="15.0" fill="rgb(223,41,24)" rx="2" ry="2" />
<text  x="14.41" y="239.5" >org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:673)</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.DefaultFailoverProxyProvider.close(DefaultFailoverProxyProvider.java:58) (102,145,653 samples, 6.64%)</title><rect x="479.9" y="181" width="78.4" height="15.0" fill="rgb(226,173,23)" rx="2" ry="2" />
<text  x="482.95" y="191.5" >org.apach..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,837,080 samples, 6.68%)</title><rect x="950.7" y="245" width="78.8" height="15.0" fill="rgb(245,135,39)" rx="2" ry="2" />
<text  x="953.65" y="255.5" >java.lang..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (299,947 samples, 0.02%)</title><rect x="11.5" y="37" width="0.2" height="15.0" fill="rgb(247,123,27)" rx="2" ry="2" />
<text  x="14.51" y="47.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1283) (102,837,080 samples, 6.68%)</title><rect x="950.7" y="277" width="78.8" height="15.0" fill="rgb(228,186,49)" rx="2" ry="2" />
<text  x="953.65" y="287.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.DefaultFailoverProxyProvider.close(DefaultFailoverProxyProvider.java:57) (611,073,636 samples, 39.71%)</title><rect x="11.4" y="181" width="468.5" height="15.0" fill="rgb(254,178,42)" rx="2" ry="2" />
<text  x="14.41" y="191.5" >org.apache.hadoop.io.retry.DefaultFailoverProxyProvider.close(De..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:673) (305,067,456 samples, 19.82%)</title><rect x="11.4" y="133" width="233.9" height="15.0" fill="rgb(211,20,29)" rx="2" ry="2" />
<text  x="14.41" y="143.5" >org.apache.hadoop.ipc.RPC.stopP..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1281) (1,224,967,360 samples, 79.60%)</title><rect x="11.4" y="277" width="939.3" height="15.0" fill="rgb(210,135,31)" rx="2" ry="2" />
<text  x="14.41" y="287.5" >org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1281)</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler.close(RetryInvocationHandler.java:444) (815,427,514 samples, 52.99%)</title><rect x="11.4" y="213" width="625.2" height="15.0" fill="rgb(244,31,21)" rx="2" ry="2" />
<text  x="14.41" y="223.5" >org.apache.hadoop.io.retry.RetryInvocationHandler.close(RetryInvocationHandler.java:444)</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (104,635,343 samples, 6.80%)</title><rect x="1029.5" y="277" width="80.2" height="15.0" fill="rgb(245,143,34)" rx="2" ry="2" />
<text  x="1032.50" y="287.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (193,615 samples, 0.01%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(231,102,19)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (101,930,208 samples, 6.62%)</title><rect x="245.3" y="133" width="78.2" height="15.0" fill="rgb(214,145,42)" rx="2" ry="2" />
<text  x="248.32" y="143.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.close(RetryInvocationHandler.java:235) (102,208,225 samples, 6.64%)</title><rect x="558.3" y="197" width="78.3" height="15.0" fill="rgb(212,52,21)" rx="2" ry="2" />
<text  x="561.27" y="207.5" >org.apach..</text>
</g>
<g >
<title>java.lang.Thread.run(Thread.java:748) (1,538,961,619 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(243,71,26)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >java.lang.Thread.run(Thread.java:748)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (101,840,576 samples, 6.62%)</title><rect x="167.2" y="85" width="78.1" height="15.0" fill="rgb(253,89,51)" rx="2" ry="2" />
<text  x="170.23" y="95.5" >java.lang..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (101,124,208 samples, 6.57%)</title><rect x="11.7" y="69" width="77.6" height="15.0" fill="rgb(206,135,9)" rx="2" ry="2" />
<text  x="14.74" y="79.5" >xyz.cnwo..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,409,530 samples, 6.65%)</title><rect x="793.5" y="213" width="78.6" height="15.0" fill="rgb(207,106,46)" rx="2" ry="2" />
<text  x="796.53" y="223.5" >java.lang..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (101,124,208 samples, 6.57%)</title><rect x="11.7" y="53" width="77.6" height="15.0" fill="rgb(250,150,8)" rx="2" ry="2" />
<text  x="14.74" y="63.5" >java.lan..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,208,225 samples, 6.64%)</title><rect x="558.3" y="165" width="78.3" height="15.0" fill="rgb(233,141,7)" rx="2" ry="2" />
<text  x="561.27" y="175.5" >java.lang..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,348,358 samples, 6.65%)</title><rect x="715.1" y="213" width="78.4" height="15.0" fill="rgb(218,228,25)" rx="2" ry="2" />
<text  x="718.05" y="223.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.ClientCache.stopClient(ClientCache.java:115) (101,667,022 samples, 6.61%)</title><rect x="89.3" y="101" width="77.9" height="15.0" fill="rgb(241,73,3)" rx="2" ry="2" />
<text  x="92.28" y="111.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,511,132 samples, 6.66%)</title><rect x="872.1" y="245" width="78.6" height="15.0" fill="rgb(254,123,5)" rx="2" ry="2" />
<text  x="875.05" y="255.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,145,653 samples, 6.64%)</title><rect x="479.9" y="149" width="78.4" height="15.0" fill="rgb(211,101,12)" rx="2" ry="2" />
<text  x="482.95" y="159.5" >java.lang..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (756,128 samples, 0.05%)</title><rect x="10.7" y="245" width="0.5" height="15.0" fill="rgb(225,210,33)" rx="2" ry="2" />
<text  x="13.65" y="255.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3375) (1,434,275,395 samples, 93.20%)</title><rect x="10.0" y="309" width="1099.7" height="15.0" fill="rgb(213,32,33)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3375)</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.close(DFSClient.java:628) (102,511,132 samples, 6.66%)</title><rect x="872.1" y="261" width="78.6" height="15.0" fill="rgb(251,109,27)" rx="2" ry="2" />
<text  x="875.05" y="271.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,003,900 samples, 6.63%)</title><rect x="323.5" y="133" width="78.2" height="15.0" fill="rgb(230,170,52)" rx="2" ry="2" />
<text  x="326.47" y="143.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (137,783 samples, 0.01%)</title><rect x="10.5" y="213" width="0.1" height="15.0" fill="rgb(221,197,13)" rx="2" ry="2" />
<text  x="13.45" y="223.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,072,072 samples, 6.63%)</title><rect x="401.7" y="149" width="78.2" height="15.0" fill="rgb(251,123,27)" rx="2" ry="2" />
<text  x="404.69" y="159.5" >xyz.cnwor..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (101,667,022 samples, 6.61%)</title><rect x="89.3" y="85" width="77.9" height="15.0" fill="rgb(247,55,48)" rx="2" ry="2" />
<text  x="92.28" y="95.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run(FutureTask.java:266) (1,538,961,619 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(214,117,22)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >java.util.concurrent.FutureTask.run(FutureTask.java:266)</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,208,225 samples, 6.64%)</title><rect x="558.3" y="181" width="78.3" height="15.0" fill="rgb(230,160,46)" rx="2" ry="2" />
<text  x="561.27" y="191.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.close(DFSClient.java:626) (1,122,455,288 samples, 72.94%)</title><rect x="11.4" y="261" width="860.7" height="15.0" fill="rgb(249,21,51)" rx="2" ry="2" />
<text  x="14.41" y="271.5" >org.apache.hadoop.hdfs.DFSClient.close(DFSClient.java:626)</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (299,947 samples, 0.02%)</title><rect x="11.5" y="53" width="0.2" height="15.0" fill="rgb(245,214,23)" rx="2" ry="2" />
<text  x="14.51" y="63.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3346) (195,785 samples, 0.01%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(254,28,38)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) (1,538,961,619 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(223,49,2)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,072,072 samples, 6.63%)</title><rect x="401.7" y="133" width="78.2" height="15.0" fill="rgb(208,210,17)" rx="2" ry="2" />
<text  x="404.69" y="143.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.remove(FileSystem.java:3321) (137,783 samples, 0.01%)</title><rect x="10.5" y="245" width="0.1" height="15.0" fill="rgb(245,107,51)" rx="2" ry="2" />
<text  x="13.45" y="255.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (104,635,343 samples, 6.80%)</title><rect x="1029.5" y="261" width="80.2" height="15.0" fill="rgb(254,113,44)" rx="2" ry="2" />
<text  x="1032.50" y="271.5" >java.lang..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,269,886 samples, 6.65%)</title><rect x="636.6" y="197" width="78.5" height="15.0" fill="rgb(215,83,12)" rx="2" ry="2" />
<text  x="639.64" y="207.5" >xyz.cnwor..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,409,530 samples, 6.65%)</title><rect x="793.5" y="229" width="78.6" height="15.0" fill="rgb(219,112,30)" rx="2" ry="2" />
<text  x="796.53" y="239.5" >xyz.cnwor..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (101,840,576 samples, 6.62%)</title><rect x="167.2" y="101" width="78.1" height="15.0" fill="rgb(213,10,30)" rx="2" ry="2" />
<text  x="170.23" y="111.5" >xyz.cnwor..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (756,128 samples, 0.05%)</title><rect x="10.7" y="261" width="0.5" height="15.0" fill="rgb(221,49,1)" rx="2" ry="2" />
<text  x="13.65" y="271.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:668) (509,001,564 samples, 33.07%)</title><rect x="11.4" y="165" width="390.3" height="15.0" fill="rgb(211,208,7)" rx="2" ry="2" />
<text  x="14.41" y="175.5" >org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:668)</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.close(RetryInvocationHandler.java:234) (713,219,289 samples, 46.34%)</title><rect x="11.4" y="197" width="546.9" height="15.0" fill="rgb(207,95,7)" rx="2" ry="2" />
<text  x="14.41" y="207.5" >org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.close(Ret..</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler.close(RetryInvocationHandler.java:445) (102,269,886 samples, 6.65%)</title><rect x="636.6" y="213" width="78.5" height="15.0" fill="rgb(208,108,32)" rx="2" ry="2" />
<text  x="639.64" y="223.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.close(ClientNamenodeProtocolTranslatorPB.java:247) (102,003,900 samples, 6.63%)</title><rect x="323.5" y="149" width="78.2" height="15.0" fill="rgb(239,62,18)" rx="2" ry="2" />
<text  x="326.47" y="159.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3358) (1,329,122,300 samples, 86.36%)</title><rect x="10.4" y="293" width="1019.1" height="15.0" fill="rgb(236,147,18)" rx="2" ry="2" />
<text  x="13.40" y="303.5" >org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3358)</text>
</g>
<g >
<title>org.apache.hadoop.fs.FilterFileSystem.close(FilterFileSystem.java:504) (209,134 samples, 0.01%)</title><rect x="10.4" y="277" width="0.2" height="15.0" fill="rgb(205,225,19)" rx="2" ry="2" />
<text  x="13.40" y="287.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) (1,538,961,619 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(229,109,21)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)</text>
</g>
<g >
<title>java.util.HashMap.get(HashMap.java:557) (195,785 samples, 0.01%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(229,225,31)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3369) (104,635,343 samples, 6.80%)</title><rect x="1029.5" y="293" width="80.2" height="15.0" fill="rgb(219,23,42)" rx="2" ry="2" />
<text  x="1032.50" y="303.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (193,615 samples, 0.01%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(239,105,28)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
</g>
</svg>
