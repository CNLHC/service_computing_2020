<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) (1,539,710,419 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(253,122,19)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (103,665,010 samples, 6.73%)</title><rect x="950.3" y="261" width="79.4" height="15.0" fill="rgb(237,18,16)" rx="2" ry="2" />
<text  x="953.25" y="271.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.close(ProtobufRpcEngine.java:301) (203,476,589 samples, 13.22%)</title><rect x="10.6" y="117" width="156.0" height="15.0" fill="rgb(229,10,16)" rx="2" ry="2" />
<text  x="13.63" y="127.5" >org.apache.hadoop.ip..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.close(ClientNamenodeProtocolTranslatorPB.java:246) (407,376,857 samples, 26.46%)</title><rect x="10.6" y="149" width="312.2" height="15.0" fill="rgb(208,220,10)" rx="2" ry="2" />
<text  x="13.63" y="159.5" >org.apache.hadoop.hdfs.protocolPB.ClientNa..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (101,996,110 samples, 6.62%)</title><rect x="244.7" y="101" width="78.1" height="15.0" fill="rgb(207,153,7)" rx="2" ry="2" />
<text  x="247.66" y="111.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1279) (253,517 samples, 0.02%)</title><rect x="10.4" y="277" width="0.2" height="15.0" fill="rgb(214,37,34)" rx="2" ry="2" />
<text  x="13.43" y="287.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,603,345 samples, 6.66%)</title><rect x="871.6" y="245" width="78.7" height="15.0" fill="rgb(222,105,40)" rx="2" ry="2" />
<text  x="874.62" y="255.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run(FutureTask.java:266) (1,539,710,419 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(210,55,18)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >java.util.concurrent.FutureTask.run(FutureTask.java:266)</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.closeConnectionToNamenode(DFSClient.java:586) (102,505,692 samples, 6.66%)</title><rect x="793.1" y="245" width="78.5" height="15.0" fill="rgb(230,205,43)" rx="2" ry="2" />
<text  x="796.06" y="255.5" >org.apach..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (261,277 samples, 0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(230,89,19)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.DefaultFailoverProxyProvider.close(DefaultFailoverProxyProvider.java:58) (102,231,046 samples, 6.64%)</title><rect x="479.4" y="181" width="78.3" height="15.0" fill="rgb(248,34,44)" rx="2" ry="2" />
<text  x="482.35" y="191.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.remove(FileSystem.java:3321) (153,994 samples, 0.01%)</title><rect x="10.5" y="245" width="0.1" height="15.0" fill="rgb(227,6,12)" rx="2" ry="2" />
<text  x="13.51" y="255.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.close(RetryInvocationHandler.java:234) (713,844,279 samples, 46.36%)</title><rect x="10.6" y="197" width="547.1" height="15.0" fill="rgb(251,43,47)" rx="2" ry="2" />
<text  x="13.63" y="207.5" >org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.close(Ret..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,442,491 samples, 6.65%)</title><rect x="714.6" y="213" width="78.5" height="15.0" fill="rgb(246,196,51)" rx="2" ry="2" />
<text  x="717.55" y="223.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3379) (104,624,614 samples, 6.80%)</title><rect x="1109.8" y="309" width="80.2" height="15.0" fill="rgb(236,11,13)" rx="2" ry="2" />
<text  x="1112.82" y="319.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.Client$ClientExecutorServiceFactory.unrefAndCleanup(Client.java:208) (425,090 samples, 0.03%)</title><rect x="10.7" y="69" width="0.4" height="15.0" fill="rgb(216,133,16)" rx="2" ry="2" />
<text  x="13.73" y="79.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.ClientCache.stopClient(ClientCache.java:113) (101,748,764 samples, 6.61%)</title><rect x="10.6" y="101" width="78.0" height="15.0" fill="rgb(244,67,26)" rx="2" ry="2" />
<text  x="13.63" y="111.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (425,090 samples, 0.03%)</title><rect x="10.7" y="53" width="0.4" height="15.0" fill="rgb(240,114,9)" rx="2" ry="2" />
<text  x="13.73" y="63.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (101,904,158 samples, 6.62%)</title><rect x="166.6" y="101" width="78.1" height="15.0" fill="rgb(233,187,5)" rx="2" ry="2" />
<text  x="169.57" y="111.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3369) (104,543,601 samples, 6.79%)</title><rect x="1029.7" y="293" width="80.1" height="15.0" fill="rgb(227,203,14)" rx="2" ry="2" />
<text  x="1032.70" y="303.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:673) (918,507,345 samples, 59.65%)</title><rect x="10.6" y="229" width="704.0" height="15.0" fill="rgb(240,78,25)" rx="2" ry="2" />
<text  x="13.63" y="239.5" >org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:673)</text>
</g>
<g >
<title>org.apache.hadoop.ipc.Client.stop(Client.java:1344) (425,090 samples, 0.03%)</title><rect x="10.7" y="85" width="0.4" height="15.0" fill="rgb(214,200,10)" rx="2" ry="2" />
<text  x="13.73" y="95.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:668) (509,455,449 samples, 33.09%)</title><rect x="10.6" y="165" width="390.5" height="15.0" fill="rgb(217,84,12)" rx="2" ry="2" />
<text  x="13.63" y="175.5" >org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:668)</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler.close(RetryInvocationHandler.java:444) (816,144,116 samples, 53.01%)</title><rect x="10.6" y="213" width="625.5" height="15.0" fill="rgb(223,152,2)" rx="2" ry="2" />
<text  x="13.63" y="223.5" >org.apache.hadoop.io.retry.RetryInvocationHandler.close(RetryInvocationHandler.java:444)</text>
</g>
<g >
<title>org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.close(ProtobufRpcEngine.java:303) (101,904,158 samples, 6.62%)</title><rect x="166.6" y="117" width="78.1" height="15.0" fill="rgb(225,44,17)" rx="2" ry="2" />
<text  x="169.57" y="127.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (104,543,601 samples, 6.79%)</title><rect x="1029.7" y="277" width="80.1" height="15.0" fill="rgb(209,70,41)" rx="2" ry="2" />
<text  x="1032.70" y="287.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) (1,539,710,419 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(233,136,1)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)</text>
</g>
<g >
<title>java.lang.Thread.run(Thread.java:748) (1,539,710,419 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(205,113,13)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >java.lang.Thread.run(Thread.java:748)</text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:673) (305,380,747 samples, 19.83%)</title><rect x="10.6" y="133" width="234.1" height="15.0" fill="rgb(254,79,47)" rx="2" ry="2" />
<text  x="13.63" y="143.5" >org.apache.hadoop.ipc.RPC.stopP..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (101,904,158 samples, 6.62%)</title><rect x="166.6" y="85" width="78.1" height="15.0" fill="rgb(230,166,5)" rx="2" ry="2" />
<text  x="169.57" y="95.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (102,442,491 samples, 6.65%)</title><rect x="714.6" y="229" width="78.5" height="15.0" fill="rgb(253,133,35)" rx="2" ry="2" />
<text  x="717.55" y="239.5" >org.apach..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (153,994 samples, 0.01%)</title><rect x="10.5" y="213" width="0.1" height="15.0" fill="rgb(251,13,45)" rx="2" ry="2" />
<text  x="13.51" y="223.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,157,784 samples, 6.63%)</title><rect x="401.1" y="133" width="78.3" height="15.0" fill="rgb(214,129,46)" rx="2" ry="2" />
<text  x="404.06" y="143.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1281) (1,226,059,903 samples, 79.63%)</title><rect x="10.6" y="277" width="939.7" height="15.0" fill="rgb(221,71,24)" rx="2" ry="2" />
<text  x="13.63" y="287.5" >org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1281)</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,299,837 samples, 6.64%)</title><rect x="557.7" y="181" width="78.4" height="15.0" fill="rgb(249,46,40)" rx="2" ry="2" />
<text  x="560.70" y="191.5" >xyz.cnwor..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (153,994 samples, 0.01%)</title><rect x="10.5" y="229" width="0.1" height="15.0" fill="rgb(235,155,23)" rx="2" ry="2" />
<text  x="13.51" y="239.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.close(DFSClient.java:626) (1,123,455,528 samples, 72.97%)</title><rect x="10.6" y="261" width="861.0" height="15.0" fill="rgb(230,27,40)" rx="2" ry="2" />
<text  x="13.63" y="271.5" >org.apache.hadoop.hdfs.DFSClient.close(DFSClient.java:626)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (104,543,601 samples, 6.79%)</title><rect x="1029.7" y="261" width="80.1" height="15.0" fill="rgb(223,116,51)" rx="2" ry="2" />
<text  x="1032.70" y="271.5" >java.lang..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,363,229 samples, 6.65%)</title><rect x="636.1" y="181" width="78.5" height="15.0" fill="rgb(219,42,12)" rx="2" ry="2" />
<text  x="639.10" y="191.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.close(RetryInvocationHandler.java:235) (102,299,837 samples, 6.64%)</title><rect x="557.7" y="197" width="78.4" height="15.0" fill="rgb(238,105,15)" rx="2" ry="2" />
<text  x="560.70" y="207.5" >org.apach..</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) (1,539,710,419 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(244,106,27)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3346) (264,397 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(207,182,19)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (102,157,784 samples, 6.63%)</title><rect x="401.1" y="165" width="78.3" height="15.0" fill="rgb(217,188,31)" rx="2" ry="2" />
<text  x="404.06" y="175.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (101,718,994 samples, 6.61%)</title><rect x="88.6" y="85" width="78.0" height="15.0" fill="rgb(252,206,4)" rx="2" ry="2" />
<text  x="91.61" y="95.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (103,665,010 samples, 6.73%)</title><rect x="950.3" y="245" width="79.4" height="15.0" fill="rgb(214,202,26)" rx="2" ry="2" />
<text  x="953.25" y="255.5" >java.lang..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (104,624,614 samples, 6.80%)</title><rect x="1109.8" y="293" width="80.2" height="15.0" fill="rgb(249,16,49)" rx="2" ry="2" />
<text  x="1112.82" y="303.5" >xyz.cnwor..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,078,592 samples, 6.63%)</title><rect x="322.8" y="133" width="78.3" height="15.0" fill="rgb(207,75,50)" rx="2" ry="2" />
<text  x="325.83" y="143.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,299,837 samples, 6.64%)</title><rect x="557.7" y="165" width="78.4" height="15.0" fill="rgb(250,46,53)" rx="2" ry="2" />
<text  x="560.70" y="175.5" >java.lang..</text>
</g>
<g >
<title>all (1,539,710,419 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(226,23,2)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>java.util.HashMap.get(HashMap.java:557) (264,397 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(247,59,18)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem.close(FileSystem.java:2422) (253,517 samples, 0.02%)</title><rect x="10.4" y="261" width="0.2" height="15.0" fill="rgb(217,214,7)" rx="2" ry="2" />
<text  x="13.43" y="271.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.DefaultFailoverProxyProvider.close(DefaultFailoverProxyProvider.java:57) (611,613,233 samples, 39.72%)</title><rect x="10.6" y="181" width="468.8" height="15.0" fill="rgb(244,214,51)" rx="2" ry="2" />
<text  x="13.63" y="191.5" >org.apache.hadoop.io.retry.DefaultFailoverProxyProvider.close(De..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.Client.stop(Client.java:1345) (101,202,481 samples, 6.57%)</title><rect x="11.1" y="85" width="77.5" height="15.0" fill="rgb(248,170,42)" rx="2" ry="2" />
<text  x="14.05" y="95.5" >org.apac..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,231,046 samples, 6.64%)</title><rect x="479.4" y="165" width="78.3" height="15.0" fill="rgb(223,132,38)" rx="2" ry="2" />
<text  x="482.35" y="175.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,231,046 samples, 6.64%)</title><rect x="479.4" y="149" width="78.3" height="15.0" fill="rgb(249,118,37)" rx="2" ry="2" />
<text  x="482.35" y="159.5" >java.lang..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (101,718,994 samples, 6.61%)</title><rect x="88.6" y="69" width="78.0" height="15.0" fill="rgb(226,83,17)" rx="2" ry="2" />
<text  x="91.61" y="79.5" >java.lang..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (261,277 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(238,214,45)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,078,592 samples, 6.63%)</title><rect x="322.8" y="117" width="78.3" height="15.0" fill="rgb(235,200,48)" rx="2" ry="2" />
<text  x="325.83" y="127.5" >java.lang..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (101,202,481 samples, 6.57%)</title><rect x="11.1" y="53" width="77.5" height="15.0" fill="rgb(234,191,14)" rx="2" ry="2" />
<text  x="14.05" y="63.5" >java.lan..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,505,692 samples, 6.66%)</title><rect x="793.1" y="229" width="78.5" height="15.0" fill="rgb(208,174,49)" rx="2" ry="2" />
<text  x="796.06" y="239.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.ClientCache.stopClient(ClientCache.java:115) (101,718,994 samples, 6.61%)</title><rect x="88.6" y="101" width="78.0" height="15.0" fill="rgb(231,211,17)" rx="2" ry="2" />
<text  x="91.61" y="111.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.closeConnectionToNamenode(DFSClient.java:585) (1,020,949,836 samples, 66.31%)</title><rect x="10.6" y="245" width="782.5" height="15.0" fill="rgb(215,216,34)" rx="2" ry="2" />
<text  x="13.63" y="255.5" >org.apache.hadoop.hdfs.DFSClient.closeConnectionToNamenode(DFSClient.java:585)</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (101,996,110 samples, 6.62%)</title><rect x="244.7" y="117" width="78.1" height="15.0" fill="rgb(214,90,37)" rx="2" ry="2" />
<text  x="247.66" y="127.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,603,345 samples, 6.66%)</title><rect x="871.6" y="229" width="78.7" height="15.0" fill="rgb(242,112,43)" rx="2" ry="2" />
<text  x="874.62" y="239.5" >java.lang..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,363,229 samples, 6.65%)</title><rect x="636.1" y="197" width="78.5" height="15.0" fill="rgb(233,62,19)" rx="2" ry="2" />
<text  x="639.10" y="207.5" >xyz.cnwor..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3358) (1,330,070,452 samples, 86.38%)</title><rect x="10.4" y="293" width="1019.3" height="15.0" fill="rgb(213,173,14)" rx="2" ry="2" />
<text  x="13.36" y="303.5" >org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3358)</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (101,202,481 samples, 6.57%)</title><rect x="11.1" y="69" width="77.5" height="15.0" fill="rgb(225,116,25)" rx="2" ry="2" />
<text  x="14.05" y="79.5" >xyz.cnwo..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (102,157,784 samples, 6.63%)</title><rect x="401.1" y="149" width="78.3" height="15.0" fill="rgb(206,98,8)" rx="2" ry="2" />
<text  x="404.06" y="159.5" >xyz.cnwor..</text>
</g>
<g >
<title>java.util.HashMap.hash(HashMap.java:339) (264,397 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(227,94,30)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.close(ClientNamenodeProtocolTranslatorPB.java:247) (102,078,592 samples, 6.63%)</title><rect x="322.8" y="149" width="78.3" height="15.0" fill="rgb(243,155,11)" rx="2" ry="2" />
<text  x="325.83" y="159.5" >org.apach..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,442,491 samples, 6.65%)</title><rect x="714.6" y="197" width="78.5" height="15.0" fill="rgb(223,67,29)" rx="2" ry="2" />
<text  x="717.55" y="207.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (101,996,110 samples, 6.62%)</title><rect x="244.7" y="133" width="78.1" height="15.0" fill="rgb(245,98,22)" rx="2" ry="2" />
<text  x="247.66" y="143.5" >org.apach..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (104,624,614 samples, 6.80%)</title><rect x="1109.8" y="277" width="80.2" height="15.0" fill="rgb(222,199,24)" rx="2" ry="2" />
<text  x="1112.82" y="287.5" >java.lang..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache$Key.hashCode(FileSystem.java:3431) (264,397 samples, 0.02%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(206,142,25)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.close(DFSClient.java:628) (102,603,345 samples, 6.66%)</title><rect x="871.6" y="261" width="78.7" height="15.0" fill="rgb(213,80,2)" rx="2" ry="2" />
<text  x="874.62" y="271.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler.close(RetryInvocationHandler.java:445) (102,363,229 samples, 6.65%)</title><rect x="636.1" y="213" width="78.5" height="15.0" fill="rgb(210,114,29)" rx="2" ry="2" />
<text  x="639.10" y="223.5" >org.apach..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3375) (1,435,085,805 samples, 93.20%)</title><rect x="10.0" y="309" width="1099.8" height="15.0" fill="rgb(238,229,37)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3375)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (102,505,692 samples, 6.66%)</title><rect x="793.1" y="213" width="78.5" height="15.0" fill="rgb(227,94,15)" rx="2" ry="2" />
<text  x="796.06" y="223.5" >java.lang..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (425,090 samples, 0.03%)</title><rect x="10.7" y="37" width="0.4" height="15.0" fill="rgb(236,32,39)" rx="2" ry="2" />
<text  x="13.73" y="47.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1283) (103,665,010 samples, 6.73%)</title><rect x="950.3" y="277" width="79.4" height="15.0" fill="rgb(223,129,9)" rx="2" ry="2" />
<text  x="953.25" y="287.5" >org.apach..</text>
</g>
</g>
</svg>
