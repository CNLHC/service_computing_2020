<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:673) (10,651,769 samples, 0.20%)</title><rect x="10.6" y="213" width="2.4" height="15.0" fill="rgb(234,214,31)" rx="2" ry="2" />
<text  x="13.64" y="223.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,175,098 samples, 0.02%)</title><rect x="11.0" y="101" width="0.3" height="15.0" fill="rgb(222,69,44)" rx="2" ry="2" />
<text  x="14.03" y="111.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (5,594,495 samples, 0.11%)</title><rect x="15.0" y="261" width="1.2" height="15.0" fill="rgb(205,59,52)" rx="2" ry="2" />
<text  x="17.98" y="271.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (597,383,840 samples, 11.25%)</title><rect x="391.6" y="181" width="132.7" height="15.0" fill="rgb(210,50,43)" rx="2" ry="2" />
<text  x="394.65" y="191.5" >java.lang.Thread..</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) (5,312,437,634 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(238,162,52)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.deleteImpl(FileUtil.java:215) (791,692 samples, 0.01%)</title><rect x="52.7" y="117" width="0.1" height="15.0" fill="rgb(235,152,1)" rx="2" ry="2" />
<text  x="55.65" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.DefaultFailoverProxyProvider.close(DefaultFailoverProxyProvider.java:57) (5,673,938 samples, 0.11%)</title><rect x="10.6" y="165" width="1.3" height="15.0" fill="rgb(250,77,27)" rx="2" ry="2" />
<text  x="13.64" y="175.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (599,398,447 samples, 11.28%)</title><rect x="657.3" y="213" width="133.1" height="15.0" fill="rgb(254,0,23)" rx="2" ry="2" />
<text  x="660.29" y="223.5" >java.lang.Thread..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3375) (28,016,168 samples, 0.53%)</title><rect x="10.0" y="293" width="6.2" height="15.0" fill="rgb(230,225,34)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.DefaultFailoverProxyProvider.close(DefaultFailoverProxyProvider.java:58) (1,542,037 samples, 0.03%)</title><rect x="11.9" y="165" width="0.3" height="15.0" fill="rgb(233,100,14)" rx="2" ry="2" />
<text  x="14.90" y="175.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (706,797 samples, 0.01%)</title><rect x="10.6" y="69" width="0.2" height="15.0" fill="rgb(212,112,19)" rx="2" ry="2" />
<text  x="13.64" y="79.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (2,692,595 samples, 0.05%)</title><rect x="45.1" y="53" width="0.6" height="15.0" fill="rgb(225,206,15)" rx="2" ry="2" />
<text  x="48.07" y="63.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (2,838,418 samples, 0.05%)</title><rect x="45.7" y="85" width="0.6" height="15.0" fill="rgb(228,193,47)" rx="2" ry="2" />
<text  x="48.67" y="95.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1283) (2,881,680 samples, 0.05%)</title><rect x="14.3" y="261" width="0.7" height="15.0" fill="rgb(217,209,53)" rx="2" ry="2" />
<text  x="17.34" y="271.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,061,116 samples, 0.02%)</title><rect x="10.3" y="229" width="0.2" height="15.0" fill="rgb(222,87,8)" rx="2" ry="2" />
<text  x="13.28" y="239.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (2,838,418 samples, 0.05%)</title><rect x="45.7" y="69" width="0.6" height="15.0" fill="rgb(218,197,29)" rx="2" ry="2" />
<text  x="48.67" y="79.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:269) (497,584,112 samples, 9.37%)</title><rect x="169.5" y="181" width="110.6" height="15.0" fill="rgb(254,186,15)" rx="2" ry="2" />
<text  x="172.55" y="191.5" >org.apache.ha..</text>
</g>
<g >
<title>java.lang.Thread.run(Thread.java:748) (5,312,437,634 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(252,150,45)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >java.lang.Thread.run(Thread.java:748)</text>
</g>
<g >
<title>org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.close(ProtobufRpcEngine.java:301) (716,887 samples, 0.01%)</title><rect x="10.6" y="101" width="0.2" height="15.0" fill="rgb(210,101,2)" rx="2" ry="2" />
<text  x="13.64" y="111.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (2,150,583 samples, 0.04%)</title><rect x="13.9" y="213" width="0.4" height="15.0" fill="rgb(221,30,7)" rx="2" ry="2" />
<text  x="16.86" y="223.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (239,229,220 samples, 4.50%)</title><rect x="62.1" y="117" width="53.1" height="15.0" fill="rgb(210,152,50)" rx="2" ry="2" />
<text  x="65.07" y="127.5" >java...</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,668,241 samples, 0.03%)</title><rect x="12.2" y="165" width="0.4" height="15.0" fill="rgb(248,36,42)" rx="2" ry="2" />
<text  x="15.24" y="175.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3379) (5,640,366 samples, 0.11%)</title><rect x="16.2" y="293" width="1.3" height="15.0" fill="rgb(221,172,48)" rx="2" ry="2" />
<text  x="19.22" y="303.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:168) (502,323,806 samples, 9.46%)</title><rect x="280.1" y="197" width="111.5" height="15.0" fill="rgb(246,101,8)" rx="2" ry="2" />
<text  x="283.07" y="207.5" >org.apache.ha..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (620,853 samples, 0.01%)</title><rect x="280.1" y="149" width="0.1" height="15.0" fill="rgb(236,57,25)" rx="2" ry="2" />
<text  x="283.07" y="159.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:165) (39,611,260 samples, 0.75%)</title><rect x="43.9" y="133" width="8.8" height="15.0" fill="rgb(218,190,15)" rx="2" ry="2" />
<text  x="46.86" y="143.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (501,702,953 samples, 9.44%)</title><rect x="280.2" y="165" width="111.4" height="15.0" fill="rgb(208,120,1)" rx="2" ry="2" />
<text  x="283.21" y="175.5" >java.lang.Thr..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3358) (21,581,634 samples, 0.41%)</title><rect x="10.2" y="277" width="4.8" height="15.0" fill="rgb(226,51,31)" rx="2" ry="2" />
<text  x="13.19" y="287.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,668,241 samples, 0.03%)</title><rect x="12.2" y="149" width="0.4" height="15.0" fill="rgb(205,222,31)" rx="2" ry="2" />
<text  x="15.24" y="159.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (244,058,368 samples, 4.59%)</title><rect x="115.3" y="149" width="54.2" height="15.0" fill="rgb(225,5,50)" rx="2" ry="2" />
<text  x="118.34" y="159.5" >xyz.c..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (40,207,834 samples, 0.76%)</title><rect x="34.8" y="117" width="8.9" height="15.0" fill="rgb(228,91,48)" rx="2" ry="2" />
<text  x="37.75" y="127.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,432,095 samples, 0.03%)</title><rect x="11.6" y="133" width="0.3" height="15.0" fill="rgb(246,65,10)" rx="2" ry="2" />
<text  x="14.58" y="143.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:668) (4,241,843 samples, 0.08%)</title><rect x="10.6" y="149" width="1.0" height="15.0" fill="rgb(208,209,15)" rx="2" ry="2" />
<text  x="13.64" y="159.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (599,604,702 samples, 11.29%)</title><rect x="790.4" y="229" width="133.2" height="15.0" fill="rgb(247,162,3)" rx="2" ry="2" />
<text  x="793.43" y="239.5" >java.lang.Thread..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (5,640,366 samples, 0.11%)</title><rect x="16.2" y="277" width="1.3" height="15.0" fill="rgb(215,61,54)" rx="2" ry="2" />
<text  x="19.22" y="287.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (497,584,112 samples, 9.37%)</title><rect x="169.5" y="149" width="110.6" height="15.0" fill="rgb(223,112,50)" rx="2" ry="2" />
<text  x="172.55" y="159.5" >java.lang.Thr..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:168) (2,852,118 samples, 0.05%)</title><rect x="45.7" y="101" width="0.6" height="15.0" fill="rgb(241,122,39)" rx="2" ry="2" />
<text  x="48.67" y="111.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (1,432,095 samples, 0.03%)</title><rect x="11.6" y="149" width="0.3" height="15.0" fill="rgb(226,127,38)" rx="2" ry="2" />
<text  x="14.58" y="159.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (41,590,906 samples, 0.78%)</title><rect x="52.8" y="117" width="9.3" height="15.0" fill="rgb(249,139,21)" rx="2" ry="2" />
<text  x="55.83" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:247) (647,305 samples, 0.01%)</title><rect x="44.9" y="85" width="0.2" height="15.0" fill="rgb(232,22,27)" rx="2" ry="2" />
<text  x="47.93" y="95.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (497,584,112 samples, 9.37%)</title><rect x="169.5" y="165" width="110.6" height="15.0" fill="rgb(238,92,38)" rx="2" ry="2" />
<text  x="172.55" y="175.5" >xyz.cnworksho..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:262) (82,343,396 samples, 1.55%)</title><rect x="43.8" y="149" width="18.3" height="15.0" fill="rgb(254,85,6)" rx="2" ry="2" />
<text  x="46.78" y="159.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.close(ProtobufRpcEngine.java:303) (1,037,786 samples, 0.02%)</title><rect x="10.8" y="101" width="0.2" height="15.0" fill="rgb(235,85,7)" rx="2" ry="2" />
<text  x="13.80" y="111.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (5,594,495 samples, 0.11%)</title><rect x="15.0" y="245" width="1.2" height="15.0" fill="rgb(221,229,31)" rx="2" ry="2" />
<text  x="17.98" y="255.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,767,553 samples, 0.03%)</title><rect x="12.6" y="165" width="0.4" height="15.0" fill="rgb(223,135,15)" rx="2" ry="2" />
<text  x="15.61" y="175.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:269) (28,582,130 samples, 0.54%)</title><rect x="46.3" y="117" width="6.4" height="15.0" fill="rgb(243,220,8)" rx="2" ry="2" />
<text  x="49.31" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:165) (3,339,900 samples, 0.06%)</title><rect x="44.9" y="101" width="0.8" height="15.0" fill="rgb(208,73,27)" rx="2" ry="2" />
<text  x="47.93" y="111.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (4,824,222 samples, 0.09%)</title><rect x="43.9" y="85" width="1.0" height="15.0" fill="rgb(246,111,15)" rx="2" ry="2" />
<text  x="46.86" y="95.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler.close(RetryInvocationHandler.java:444) (8,884,216 samples, 0.17%)</title><rect x="10.6" y="197" width="2.0" height="15.0" fill="rgb(237,111,46)" rx="2" ry="2" />
<text  x="13.64" y="207.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (5,640,366 samples, 0.11%)</title><rect x="16.2" y="261" width="1.3" height="15.0" fill="rgb(232,111,36)" rx="2" ry="2" />
<text  x="19.22" y="271.5" ></text>
</g>
<g >
<title>org.apache.hadoop.util.RunJar$1.run(RunJar.java:228) (599,652,473 samples, 11.29%)</title><rect x="1056.8" y="293" width="133.2" height="15.0" fill="rgb(250,173,46)" rx="2" ry="2" />
<text  x="1059.81" y="303.5" >org.apache.hadoo..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (2,150,583 samples, 0.04%)</title><rect x="13.9" y="229" width="0.4" height="15.0" fill="rgb(216,139,34)" rx="2" ry="2" />
<text  x="16.86" y="239.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:269) (597,383,840 samples, 11.25%)</title><rect x="391.6" y="213" width="132.7" height="15.0" fill="rgb(247,174,2)" rx="2" ry="2" />
<text  x="394.65" y="223.5" >org.apache.hadoo..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:165) (3,479,800,251 samples, 65.50%)</title><rect x="17.5" y="261" width="772.9" height="15.0" fill="rgb(208,42,39)" rx="2" ry="2" />
<text  x="20.49" y="271.5" >org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:165)</text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) (5,312,437,634 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(221,72,36)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,432,095 samples, 0.03%)</title><rect x="11.6" y="117" width="0.3" height="15.0" fill="rgb(225,157,7)" rx="2" ry="2" />
<text  x="14.58" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.closeConnectionToNamenode(DFSClient.java:585) (12,540,905 samples, 0.24%)</title><rect x="10.6" y="229" width="2.8" height="15.0" fill="rgb(249,183,40)" rx="2" ry="2" />
<text  x="13.64" y="239.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:168) (599,628,382 samples, 11.29%)</title><rect x="790.4" y="261" width="133.2" height="15.0" fill="rgb(227,8,23)" rx="2" ry="2" />
<text  x="793.43" y="271.5" >org.apache.hadoo..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (597,383,840 samples, 11.25%)</title><rect x="391.6" y="197" width="132.7" height="15.0" fill="rgb(236,187,42)" rx="2" ry="2" />
<text  x="394.65" y="207.5" >xyz.cnworkshop.P..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.deleteImpl(FileUtil.java:215) (604,346 samples, 0.01%)</title><rect x="115.2" y="149" width="0.1" height="15.0" fill="rgb(232,189,54)" rx="2" ry="2" />
<text  x="118.21" y="159.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:247) (40,207,834 samples, 0.76%)</title><rect x="34.8" y="149" width="8.9" height="15.0" fill="rgb(232,30,51)" rx="2" ry="2" />
<text  x="37.75" y="159.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (599,604,702 samples, 11.29%)</title><rect x="790.4" y="245" width="133.2" height="15.0" fill="rgb(213,213,51)" rx="2" ry="2" />
<text  x="793.43" y="255.5" >xyz.cnworkshop.P..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.close(DFSClient.java:626) (14,517,383 samples, 0.27%)</title><rect x="10.6" y="245" width="3.3" height="15.0" fill="rgb(205,225,12)" rx="2" ry="2" />
<text  x="13.64" y="255.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (501,702,953 samples, 9.44%)</title><rect x="280.2" y="181" width="111.4" height="15.0" fill="rgb(217,110,2)" rx="2" ry="2" />
<text  x="283.21" y="191.5" >xyz.cnworksho..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (604,346 samples, 0.01%)</title><rect x="115.2" y="133" width="0.1" height="15.0" fill="rgb(233,127,43)" rx="2" ry="2" />
<text  x="118.21" y="143.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.close(ClientNamenodeProtocolTranslatorPB.java:246) (2,929,771 samples, 0.06%)</title><rect x="10.6" y="133" width="0.7" height="15.0" fill="rgb(207,92,41)" rx="2" ry="2" />
<text  x="13.64" y="143.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (2,881,680 samples, 0.05%)</title><rect x="14.3" y="229" width="0.7" height="15.0" fill="rgb(216,125,40)" rx="2" ry="2" />
<text  x="17.34" y="239.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (647,305 samples, 0.01%)</title><rect x="44.9" y="53" width="0.2" height="15.0" fill="rgb(243,17,21)" rx="2" ry="2" />
<text  x="47.93" y="63.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (620,853 samples, 0.01%)</title><rect x="280.1" y="165" width="0.1" height="15.0" fill="rgb(210,68,0)" rx="2" ry="2" />
<text  x="283.07" y="175.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,976,478 samples, 0.04%)</title><rect x="13.4" y="213" width="0.5" height="15.0" fill="rgb(248,122,15)" rx="2" ry="2" />
<text  x="16.42" y="223.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:269) (239,229,220 samples, 4.50%)</title><rect x="62.1" y="149" width="53.1" height="15.0" fill="rgb(237,77,27)" rx="2" ry="2" />
<text  x="65.07" y="159.5" >org.a..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:165) (2,281,647,371 samples, 42.95%)</title><rect x="17.5" y="229" width="506.8" height="15.0" fill="rgb(245,164,4)" rx="2" ry="2" />
<text  x="20.54" y="239.5" >org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:165)</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.deleteImpl(FileUtil.java:215) (40,207,834 samples, 0.76%)</title><rect x="34.8" y="133" width="8.9" height="15.0" fill="rgb(244,172,15)" rx="2" ry="2" />
<text  x="37.75" y="143.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (40,207,834 samples, 0.76%)</title><rect x="34.8" y="101" width="8.9" height="15.0" fill="rgb(207,70,41)" rx="2" ry="2" />
<text  x="37.75" y="111.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (244,058,368 samples, 4.59%)</title><rect x="115.3" y="133" width="54.2" height="15.0" fill="rgb(252,220,47)" rx="2" ry="2" />
<text  x="118.34" y="143.5" >java...</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (599,652,473 samples, 11.29%)</title><rect x="1056.8" y="277" width="133.2" height="15.0" fill="rgb(209,19,22)" rx="2" ry="2" />
<text  x="1059.81" y="287.5" >xyz.cnworkshop.P..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (599,625,312 samples, 11.29%)</title><rect x="923.6" y="261" width="133.2" height="15.0" fill="rgb(211,47,5)" rx="2" ry="2" />
<text  x="926.62" y="271.5" >xyz.cnworkshop.P..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,312,072 samples, 0.02%)</title><rect x="11.3" y="117" width="0.3" height="15.0" fill="rgb(223,3,36)" rx="2" ry="2" />
<text  x="14.29" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.close(RetryInvocationHandler.java:234) (7,215,975 samples, 0.14%)</title><rect x="10.6" y="181" width="1.6" height="15.0" fill="rgb(210,217,20)" rx="2" ry="2" />
<text  x="13.64" y="191.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (28,582,130 samples, 0.54%)</title><rect x="46.3" y="85" width="6.4" height="15.0" fill="rgb(227,161,33)" rx="2" ry="2" />
<text  x="49.31" y="95.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,889,136 samples, 0.04%)</title><rect x="13.0" y="197" width="0.4" height="15.0" fill="rgb(211,113,45)" rx="2" ry="2" />
<text  x="16.00" y="207.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:269) (599,398,447 samples, 11.28%)</title><rect x="657.3" y="245" width="133.1" height="15.0" fill="rgb(248,106,27)" rx="2" ry="2" />
<text  x="660.29" y="255.5" >org.apache.hadoo..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,976,478 samples, 0.04%)</title><rect x="13.4" y="197" width="0.5" height="15.0" fill="rgb(254,147,19)" rx="2" ry="2" />
<text  x="16.42" y="207.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:262) (2,880,232,239 samples, 54.22%)</title><rect x="17.5" y="245" width="639.8" height="15.0" fill="rgb(232,192,4)" rx="2" ry="2" />
<text  x="20.53" y="255.5" >org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:262)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,889,136 samples, 0.04%)</title><rect x="13.0" y="181" width="0.4" height="15.0" fill="rgb(221,95,39)" rx="2" ry="2" />
<text  x="16.00" y="191.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (54,351,326 samples, 1.02%)</title><rect x="22.6" y="149" width="12.0" height="15.0" fill="rgb(245,142,51)" rx="2" ry="2" />
<text  x="25.58" y="159.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,061,116 samples, 0.02%)</title><rect x="10.3" y="245" width="0.2" height="15.0" fill="rgb(239,61,25)" rx="2" ry="2" />
<text  x="13.28" y="255.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1281) (16,669,336 samples, 0.31%)</title><rect x="10.6" y="261" width="3.7" height="15.0" fill="rgb(247,226,46)" rx="2" ry="2" />
<text  x="13.64" y="271.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (598,362,752 samples, 11.26%)</title><rect x="524.4" y="213" width="132.9" height="15.0" fill="rgb(209,156,45)" rx="2" ry="2" />
<text  x="527.38" y="223.5" >xyz.cnworkshop.P..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.close(ClientNamenodeProtocolTranslatorPB.java:247) (1,312,072 samples, 0.02%)</title><rect x="11.3" y="133" width="0.3" height="15.0" fill="rgb(239,159,28)" rx="2" ry="2" />
<text  x="14.29" y="143.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (647,305 samples, 0.01%)</title><rect x="44.9" y="37" width="0.2" height="15.0" fill="rgb(226,0,48)" rx="2" ry="2" />
<text  x="47.93" y="47.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:168) (598,536,847 samples, 11.27%)</title><rect x="524.3" y="229" width="133.0" height="15.0" fill="rgb(230,97,44)" rx="2" ry="2" />
<text  x="527.34" y="239.5" >org.apache.hadoo..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.ClientCache.stopClient(ClientCache.java:115) (706,797 samples, 0.01%)</title><rect x="10.6" y="85" width="0.2" height="15.0" fill="rgb(221,187,13)" rx="2" ry="2" />
<text  x="13.64" y="95.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (604,346 samples, 0.01%)</title><rect x="115.2" y="117" width="0.1" height="15.0" fill="rgb(210,30,3)" rx="2" ry="2" />
<text  x="118.21" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.deleteImpl(FileUtil.java:215) (54,351,326 samples, 1.02%)</title><rect x="22.6" y="165" width="12.0" height="15.0" fill="rgb(206,229,50)" rx="2" ry="2" />
<text  x="25.58" y="175.5" ></text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.close(DFSClient.java:628) (2,150,583 samples, 0.04%)</title><rect x="13.9" y="245" width="0.4" height="15.0" fill="rgb(215,103,22)" rx="2" ry="2" />
<text  x="16.86" y="255.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (41,590,906 samples, 0.78%)</title><rect x="52.8" y="101" width="9.3" height="15.0" fill="rgb(237,182,23)" rx="2" ry="2" />
<text  x="55.83" y="111.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (2,881,680 samples, 0.05%)</title><rect x="14.3" y="245" width="0.7" height="15.0" fill="rgb(219,167,21)" rx="2" ry="2" />
<text  x="17.34" y="255.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (239,229,220 samples, 4.50%)</title><rect x="62.1" y="133" width="53.1" height="15.0" fill="rgb(219,25,25)" rx="2" ry="2" />
<text  x="65.07" y="143.5" >xyz.c..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:269) (2,692,595 samples, 0.05%)</title><rect x="45.1" y="85" width="0.6" height="15.0" fill="rgb(247,115,42)" rx="2" ry="2" />
<text  x="48.07" y="95.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (1,889,136 samples, 0.04%)</title><rect x="13.0" y="213" width="0.4" height="15.0" fill="rgb(242,218,53)" rx="2" ry="2" />
<text  x="16.00" y="223.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.deleteImpl(FileUtil.java:215) (4,824,222 samples, 0.09%)</title><rect x="43.9" y="101" width="1.0" height="15.0" fill="rgb(212,125,45)" rx="2" ry="2" />
<text  x="46.86" y="111.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.deleteImpl(FileUtil.java:215) (22,213,856 samples, 0.42%)</title><rect x="17.5" y="197" width="5.0" height="15.0" fill="rgb(214,157,18)" rx="2" ry="2" />
<text  x="20.54" y="207.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler.close(RetryInvocationHandler.java:445) (1,767,553 samples, 0.03%)</title><rect x="12.6" y="197" width="0.4" height="15.0" fill="rgb(208,123,52)" rx="2" ry="2" />
<text  x="15.61" y="207.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,037,786 samples, 0.02%)</title><rect x="10.8" y="85" width="0.2" height="15.0" fill="rgb(217,142,50)" rx="2" ry="2" />
<text  x="13.80" y="95.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,037,786 samples, 0.02%)</title><rect x="10.8" y="69" width="0.2" height="15.0" fill="rgb(248,6,53)" rx="2" ry="2" />
<text  x="13.80" y="79.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:247) (54,351,326 samples, 1.02%)</title><rect x="22.6" y="181" width="12.0" height="15.0" fill="rgb(244,155,11)" rx="2" ry="2" />
<text  x="25.58" y="191.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3369) (5,594,495 samples, 0.11%)</title><rect x="15.0" y="277" width="1.2" height="15.0" fill="rgb(246,113,42)" rx="2" ry="2" />
<text  x="17.98" y="287.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (599,652,473 samples, 11.29%)</title><rect x="1056.8" y="261" width="133.2" height="15.0" fill="rgb(222,17,9)" rx="2" ry="2" />
<text  x="1059.81" y="271.5" >java.lang.Thread..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (599,625,312 samples, 11.29%)</title><rect x="923.6" y="245" width="133.2" height="15.0" fill="rgb(231,193,24)" rx="2" ry="2" />
<text  x="926.62" y="255.5" >java.lang.Thread..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (791,692 samples, 0.01%)</title><rect x="52.7" y="85" width="0.1" height="15.0" fill="rgb(250,186,50)" rx="2" ry="2" />
<text  x="55.65" y="95.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (22,213,856 samples, 0.42%)</title><rect x="17.5" y="181" width="5.0" height="15.0" fill="rgb(246,129,33)" rx="2" ry="2" />
<text  x="20.54" y="191.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (54,351,326 samples, 1.02%)</title><rect x="22.6" y="133" width="12.0" height="15.0" fill="rgb(250,149,30)" rx="2" ry="2" />
<text  x="25.58" y="143.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,542,037 samples, 0.03%)</title><rect x="11.9" y="149" width="0.3" height="15.0" fill="rgb(227,148,36)" rx="2" ry="2" />
<text  x="14.90" y="159.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (2,692,595 samples, 0.05%)</title><rect x="45.1" y="69" width="0.6" height="15.0" fill="rgb(237,221,53)" rx="2" ry="2" />
<text  x="48.07" y="79.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,175,098 samples, 0.02%)</title><rect x="11.0" y="85" width="0.3" height="15.0" fill="rgb(236,3,9)" rx="2" ry="2" />
<text  x="14.03" y="95.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (791,692 samples, 0.01%)</title><rect x="52.7" y="101" width="0.1" height="15.0" fill="rgb(207,128,10)" rx="2" ry="2" />
<text  x="55.65" y="111.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:165) (362,193,212 samples, 6.82%)</title><rect x="34.8" y="165" width="80.4" height="15.0" fill="rgb(236,228,13)" rx="2" ry="2" />
<text  x="37.75" y="175.5" >org.apach..</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (1,767,553 samples, 0.03%)</title><rect x="12.6" y="181" width="0.4" height="15.0" fill="rgb(221,96,44)" rx="2" ry="2" />
<text  x="15.61" y="191.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:247) (4,824,222 samples, 0.09%)</title><rect x="43.9" y="117" width="1.0" height="15.0" fill="rgb(252,160,41)" rx="2" ry="2" />
<text  x="46.86" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:262) (1,661,792,377 samples, 31.28%)</title><rect x="22.5" y="213" width="369.1" height="15.0" fill="rgb(215,92,41)" rx="2" ry="2" />
<text  x="25.53" y="223.5" >org.apache.hadoop.fs.FileUtil.fullyDeleteContents(..</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,542,037 samples, 0.03%)</title><rect x="11.9" y="133" width="0.3" height="15.0" fill="rgb(222,82,26)" rx="2" ry="2" />
<text  x="14.90" y="143.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (706,797 samples, 0.01%)</title><rect x="10.6" y="53" width="0.2" height="15.0" fill="rgb(214,34,29)" rx="2" ry="2" />
<text  x="13.64" y="63.5" ></text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (28,582,130 samples, 0.54%)</title><rect x="46.3" y="101" width="6.4" height="15.0" fill="rgb(221,219,50)" rx="2" ry="2" />
<text  x="49.31" y="111.5" ></text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:673) (1,754,673 samples, 0.03%)</title><rect x="10.6" y="117" width="0.4" height="15.0" fill="rgb(236,148,36)" rx="2" ry="2" />
<text  x="13.64" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:168) (244,662,714 samples, 4.61%)</title><rect x="115.2" y="165" width="54.3" height="15.0" fill="rgb(219,184,40)" rx="2" ry="2" />
<text  x="118.21" y="175.5" >org.a..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:247) (22,213,856 samples, 0.42%)</title><rect x="17.5" y="213" width="5.0" height="15.0" fill="rgb(206,217,14)" rx="2" ry="2" />
<text  x="20.54" y="223.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FilterFileSystem.close(FilterFileSystem.java:506) (1,061,116 samples, 0.02%)</title><rect x="10.3" y="261" width="0.2" height="15.0" fill="rgb(228,217,2)" rx="2" ry="2" />
<text  x="13.28" y="271.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) (5,312,437,634 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(235,83,17)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)</text>
</g>
<g >
<title>xyz.cnworkshop.Profilier.report(Profilier.java:56) (599,398,447 samples, 11.28%)</title><rect x="657.3" y="229" width="133.1" height="15.0" fill="rgb(225,67,34)" rx="2" ry="2" />
<text  x="660.29" y="239.5" >xyz.cnworkshop.P..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.deleteImpl(FileUtil.java:215) (620,853 samples, 0.01%)</title><rect x="280.1" y="181" width="0.1" height="15.0" fill="rgb(228,145,0)" rx="2" ry="2" />
<text  x="283.07" y="191.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:262) (6,197,998 samples, 0.12%)</title><rect x="44.9" y="117" width="1.4" height="15.0" fill="rgb(205,140,50)" rx="2" ry="2" />
<text  x="47.93" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:136) (4,679,128,627 samples, 88.08%)</title><rect x="17.5" y="277" width="1039.3" height="15.0" fill="rgb(219,147,46)" rx="2" ry="2" />
<text  x="20.48" y="287.5" >org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:136)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (22,213,856 samples, 0.42%)</title><rect x="17.5" y="165" width="5.0" height="15.0" fill="rgb(228,155,12)" rx="2" ry="2" />
<text  x="20.54" y="175.5" ></text>
</g>
<g >
<title>org.apache.hadoop.util.RunJar$1.run(RunJar.java:227) (4,679,128,627 samples, 88.08%)</title><rect x="17.5" y="293" width="1039.3" height="15.0" fill="rgb(252,207,20)" rx="2" ry="2" />
<text  x="20.48" y="303.5" >org.apache.hadoop.util.RunJar$1.run(RunJar.java:227)</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDeleteContents(FileUtil.java:262) (607,072,420 samples, 11.43%)</title><rect x="34.7" y="181" width="134.8" height="15.0" fill="rgb(252,181,4)" rx="2" ry="2" />
<text  x="37.71" y="191.5" >org.apache.hadoop..</text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.deleteImpl(FileUtil.java:215) (647,305 samples, 0.01%)</title><rect x="44.9" y="69" width="0.2" height="15.0" fill="rgb(233,11,6)" rx="2" ry="2" />
<text  x="47.93" y="79.5" ></text>
</g>
<g >
<title>all (5,312,437,634 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(208,133,34)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:165) (1,159,271,515 samples, 21.82%)</title><rect x="22.6" y="197" width="257.5" height="15.0" fill="rgb(220,127,1)" rx="2" ry="2" />
<text  x="25.58" y="207.5" >org.apache.hadoop.fs.FileUtil.full..</text>
</g>
<g >
<title>org.apache.hadoop.ipc.RPC.stopProxy(RPC.java:686) (1,175,098 samples, 0.02%)</title><rect x="11.0" y="117" width="0.3" height="15.0" fill="rgb(241,15,32)" rx="2" ry="2" />
<text  x="14.03" y="127.5" ></text>
</g>
<g >
<title>org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor.close(RetryInvocationHandler.java:235) (1,668,241 samples, 0.03%)</title><rect x="12.2" y="181" width="0.4" height="15.0" fill="rgb(245,43,2)" rx="2" ry="2" />
<text  x="15.24" y="191.5" ></text>
</g>
<g >
<title>org.apache.hadoop.fs.FileUtil.fullyDelete(FileUtil.java:168) (42,382,598 samples, 0.80%)</title><rect x="52.7" y="133" width="9.4" height="15.0" fill="rgb(214,18,42)" rx="2" ry="2" />
<text  x="55.65" y="143.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (4,824,222 samples, 0.09%)</title><rect x="43.9" y="69" width="1.0" height="15.0" fill="rgb(232,132,44)" rx="2" ry="2" />
<text  x="46.86" y="79.5" ></text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (598,362,752 samples, 11.26%)</title><rect x="524.4" y="197" width="132.9" height="15.0" fill="rgb(236,157,37)" rx="2" ry="2" />
<text  x="527.38" y="207.5" >java.lang.Thread..</text>
</g>
<g >
<title>org.apache.hadoop.hdfs.DFSClient.closeConnectionToNamenode(DFSClient.java:586) (1,976,478 samples, 0.04%)</title><rect x="13.4" y="229" width="0.5" height="15.0" fill="rgb(253,158,24)" rx="2" ry="2" />
<text  x="16.42" y="239.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run(FutureTask.java:266) (5,312,437,634 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(216,170,48)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >java.util.concurrent.FutureTask.run(FutureTask.java:266)</text>
</g>
<g >
<title>java.lang.Thread.getStackTrace(Thread.java:1559) (1,312,072 samples, 0.02%)</title><rect x="11.3" y="101" width="0.3" height="15.0" fill="rgb(219,188,11)" rx="2" ry="2" />
<text  x="14.29" y="111.5" ></text>
</g>
</g>
</svg>
